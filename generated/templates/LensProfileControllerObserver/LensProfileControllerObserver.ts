// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionStarted extends ethereum.Event {
  get params(): AuctionStarted__Params {
    return new AuctionStarted__Params(this);
  }
}

export class AuctionStarted__Params {
  _event: AuctionStarted;

  constructor(event: AuctionStarted) {
    this._event = event;
  }
}

export class AuctionStopped extends ethereum.Event {
  get params(): AuctionStopped__Params {
    return new AuctionStopped__Params(this);
  }
}

export class AuctionStopped__Params {
  _event: AuctionStopped;

  constructor(event: AuctionStopped) {
    this._event = event;
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LensProfileControllerObserver extends ethereum.SmartContract {
  static bind(address: Address): LensProfileControllerObserver {
    return new LensProfileControllerObserver(
      "LensProfileControllerObserver",
      address
    );
  }

  metadata(): string {
    let result = super.call("metadata", "metadata():(string)", []);

    return result[0].toString();
  }

  try_metadata(): ethereum.CallResult<string> {
    let result = super.tryCall("metadata", "metadata():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rentalAuction(): Address {
    let result = super.call("rentalAuction", "rentalAuction():(address)", []);

    return result[0].toAddress();
  }

  try_rentalAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "rentalAuction",
      "rentalAuction():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenId(): BigInt {
    let result = super.call("tokenId", "tokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_tokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tokenId", "tokenId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _rentalAuction(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get extraArgs(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PostCall extends ethereum.Call {
  get inputs(): PostCall__Inputs {
    return new PostCall__Inputs(this);
  }

  get outputs(): PostCall__Outputs {
    return new PostCall__Outputs(this);
  }
}

export class PostCall__Inputs {
  _call: PostCall;

  constructor(call: PostCall) {
    this._call = call;
  }

  get postData(): PostCallPostDataStruct {
    return changetype<PostCallPostDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class PostCall__Outputs {
  _call: PostCall;

  constructor(call: PostCall) {
    this._call = call;
  }
}

export class PostCallPostDataStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get contentURI(): string {
    return this[1].toString();
  }

  get collectModule(): Address {
    return this[2].toAddress();
  }

  get collectModuleInitData(): Bytes {
    return this[3].toBytes();
  }

  get referenceModule(): Address {
    return this[4].toAddress();
  }

  get referenceModuleInitData(): Bytes {
    return this[5].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StartAuctionCall extends ethereum.Call {
  get inputs(): StartAuctionCall__Inputs {
    return new StartAuctionCall__Inputs(this);
  }

  get outputs(): StartAuctionCall__Outputs {
    return new StartAuctionCall__Outputs(this);
  }
}

export class StartAuctionCall__Inputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class StartAuctionCall__Outputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class StopAuctionCall extends ethereum.Call {
  get inputs(): StopAuctionCall__Inputs {
    return new StopAuctionCall__Inputs(this);
  }

  get outputs(): StopAuctionCall__Outputs {
    return new StopAuctionCall__Outputs(this);
  }
}

export class StopAuctionCall__Inputs {
  _call: StopAuctionCall;

  constructor(call: StopAuctionCall) {
    this._call = call;
  }
}

export class StopAuctionCall__Outputs {
  _call: StopAuctionCall;

  constructor(call: StopAuctionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
