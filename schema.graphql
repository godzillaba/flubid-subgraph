# type ContinuousRentalAuctionDeployed @entity(immutable: true) {
#   id: Bytes!
#   auctionAddress: Bytes! # address
#   controllerObserverAddress: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type RentalAuctionControllerObserverDeployed @entity(immutable: true) {
#   id: Bytes!
#   controllerObserverImplementation: Bytes! # address
#   controllerObserverAddress: Bytes! # address
#   auctionAddress: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

type ContinuousRentalAuctionFactory @entity(immutable: true) {
  id: Bytes!
}

# type UserInfo @entity(immutable: false) {
#   id: ID!
#   rentalAuction: ContinuousRentalAuction!
#   account: Bytes! # address
#   data: Bytes! # bytes
# }

type Stream @entity(immutable: false) {
  id: Bytes! # Stream-{txhash}{logIndex}
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt! 
}

type StreamHistory @entity(immutable: true) {
  id: Bytes! # StreamHistory-{txhash}{logIndex}
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt

  operation: String! # create/update/delete
}

type ContinuousRentalAuction @entity(immutable: false) {
  id: Bytes!

  address: Bytes!

  # controllerObserverImplementation: Bytes! # address
  # controllerObserver: Bytes! # address

  # acceptedToken: Bytes # address
  # beneficiary: Bytes # address
  # minimumBidFactorWad: BigInt
  # reserveRate: BigInt

  # currentRenter: Bytes # address
  
  # continuous specific non constants
  inboundStreams: [Stream!]!
}

type EnglishRentalAuction @entity(immutable: false) {
  # todo: paused?
  id: Bytes!
  address: Bytes!

  ## Constants
  # controllerObserverImplementation: Bytes! # address
  # controllerObserver: Bytes! # address

  # acceptedToken: Bytes # address
  # beneficiary: Bytes # address
  # minimumBidFactorWad: BigInt
  # reserveRate: BigInt

  # English specific constants
  minRentalDuration: BigInt!
  maxRentalDuration: BigInt!
  biddingPhaseDuration: BigInt!
  biddingPhaseExtensionDuration: BigInt!

  # English specific non constants
  # todo phase info
}

type GenericControllerObserver @entity(immutable: false) {
  id: Bytes! # address based
  address: Bytes!
  implementation: Bytes! # address
  auctionAddress: Bytes! # address

  underlyingTokenContract: Bytes!
  underlyingTokenID: BigInt!

  underlyingTokenName: String!
  underlyingTokenURI: String!
}

type GenericRentalAuction @entity(immutable: false) {
  id: Bytes! 
  type: String!
  address: Bytes! # address

  ## Constants
  controllerObserverImplementation: Bytes! # address
  # controllerObserver: Bytes! # address

  acceptedToken: Bytes! # address
  beneficiary: Bytes! # address
  minimumBidFactorWad: BigInt!
  reserveRate: BigInt!

  ## non constants
  topBid: BigInt!
  currentRenter: Bytes!

  controllerObserver: GenericControllerObserver!

  ## controller related stuff
  # underlyingTokenContract: Bytes
  # underlyingTokenID: BigInt

  # underlyingTokenName: String
  # underlyingTokenURI: String
}

# type IRentalAuctionControllerObserver @entity {id: Bytes!}
# type ERC4907Metadata @entity {id: Bytes!}

# type RentalAuctionControllerObserver @entity(immutable: true) {
#   id: Bytes! # address
#   type: String
#   rentalAuction: Bytes! # address
# }